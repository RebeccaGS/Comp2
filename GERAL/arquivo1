/* Universidade Federal do Rio de Janeiro
 * Escola Politecnica
 * Departamento de Eletronica e Computacao
 * EEL270 - Computacao II - Turma 2020/4 - PLE-1
 * Prof. Marcelo Luiz Drumond Lanza
 * Autor: Luiz Carlos Aguiar Carrion
 * Descricao: Funcao que exibe o conteudo de um arquivo
 *
 * $Author: luiz.carrion $
 * $Date: 2020/10/21 04:43:20 $
 * $Log: aula0807.c,v $
 * Revision 1.2  2020/10/21 04:43:20  luiz.carrion
 * Retira um espaco a mais
 *
 * Revision 1.1  2020/10/21 01:57:08  luiz.carrion
 * Initial revision
 *
*/

#define _XOPEN_SOURCE_			600

#include <stdio.h>
#include <stdlib.h>

#include "aula08.h"

#define TAMANHO_MAXIMO_LINHA		4000
#define QUANTIDADE_LINHAS		1000

#define QUANTIDADE_BYTES_LINHA		80

#define ENTER				'\n'
#define EOS				'\0'

tipoErros ExibirConteudoArquivo (char *original) {
	
	FILE *arquivo;

	unsigned indice, indiceConteudo;

	unsigned indiceCaractereAtual = 0;

	unsigned indiceCaractereLinhaAtual;

	char caractereAtual;

	char linhaAtual[TAMANHO_MAXIMO_LINHA];
	
	char conteudoArquivo[TAMANHO_MAXIMO_LINHA * QUANTIDADE_LINHAS];

	unsigned comeco, fim, faltaEspaco;

	printf ("\n\n");

	if (!original) {
		return originalNulo;
	}

	/* Tentando abrir o arquivo */
	if (!(arquivo = fopen (original, "r"))) {
		return erroAbrirArquivoOriginal;
	}
	
	
	while (fgets(linhaAtual, TAMANHO_MAXIMO_LINHA, arquivo)) {
	
		indiceCaractereLinhaAtual = 0;

		do {
			caractereAtual = linhaAtual[indiceCaractereLinhaAtual];
			conteudoArquivo[indiceCaractereAtual] = caractereAtual;

			indiceCaractereLinhaAtual++;
			indiceCaractereAtual++;
		} while (linhaAtual[indiceCaractereLinhaAtual] != ENTER);
	}

	conteudoArquivo[indiceCaractereAtual] = EOS;

	comeco = 0;

	for (indiceConteudo = 0; conteudoArquivo[indiceConteudo] != EOS; indiceConteudo++){
		
		fim = indiceConteudo;
		
		#ifdef _MY_DEBUG_
		printf ("Fim: %u\n\n", fim);

		if (conteudoArquivo[indiceConteudo + 1] == EOS) {
			printf ("Achou");
		}
		#endif
	
		if ((indiceConteudo + 1) % 80 == 0  || conteudoArquivo[indiceConteudo + 1] == EOS) {
			faltaEspaco = 0;
			printf ("%012X-%012X | ", comeco, fim);

			for (indice = comeco; indice < fim+1; indice++) {
				printf ("%02X ", conteudoArquivo[indice]);
				faltaEspaco++;
			}

			while (faltaEspaco % 80 != 0) {
				printf ("   ");
				faltaEspaco++;
			}

			printf ("| ");

			for (indice = comeco; indice < fim+1; indice++) {
				if (conteudoArquivo[indice] <= 0x20 || conteudoArquivo[indice] >= 0X7F) {
					printf (".");
				} else {
					printf ("%c", conteudoArquivo[indice]);
				}
			}

			comeco = fim + 1;

			printf ("\n");
		}
	}

	printf ("\n\n");


	fclose (arquivo);

	return ok;
}


/* $RCSfile: aula0807.c,v $ */	